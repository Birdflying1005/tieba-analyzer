group 'com.codingdie'
version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    //akka
    compile 'com.typesafe.akka:akka-actor_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-agent_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-camel_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-cluster_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-cluster-metrics_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-cluster-sharding_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-cluster-tools_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-distributed-data_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-multi-node-testkit_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-osgi_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-persistence_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-persistence-query_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-persistence-tck_2.11:2.5.0'
    compile 'com.typesafe.akka:akka-remote_2.11:2.5.0'
    compile 'com.typesafe.akka:akka-slf4j_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-stream_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-stream-testkit_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-testkit_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-typed_2.11:2.5.0'
//    compile 'com.typesafe.akka:akka-contrib_2.11:2.5.0'

    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.6.0'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.9.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.5.6'
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.5.6'

}



task slaveJar(type: Jar,dependsOn: [classes]){
    baseName "slavenode"
    from('build/classes/main','build/resources/main')
    destinationDir new File('build/release/libs')

    manifest{
        attributes 'Main-Class': 'com.codingdie.analyzer.SlaveStarter'
        String someString = ''
        configurations.runtime.each {someString = someString + " "+it.name} //遍历项目的所有依赖的jar包赋值给变量someString
        attributes 'Class-Path': someString
    }
}

task serverJar(type: Jar,dependsOn: [classes]){
    baseName "masternode"
    from('build/classes/main','build/resources/main')
    destinationDir new File('build/release/libs')
    manifest{
        attributes 'Main-Class': 'com.codingdie.analyzer.MasterStarter'
        String someString = ''
        configurations.runtime.each {someString = someString + " "+it.name} //遍历项目的所有依赖的jar包赋值给变量someString
        attributes 'Class-Path': someString
    }
}

task copylibs(type: Copy){
    from configurations.runtime
    into ('build/release/libs')
}
task copyconf(type: Copy){
    from(project.rootDir.toString()+"/conf") {
        include '*.conf'
    }
    into ('build/release/conf')
}
task copyscript(type: Copy){
    from(project.rootDir.toString()+"/script") {
        include '*.sh'
    }
    into ('build/release')
}

jar{
    new File("build/release/logs").mkdirs()
}
task copyRunJar(type: Copy ){

    from("build/libs") {
        include '*node*.jar'
    }
    into ('build/release')
}

task release(dependsOn:[classes,serverJar,slaveJar,copyconf,copyscript,copylibs,copyRunJar]){

}


task startMaster(type: Exec,dependsOn:"build") {
    commandLine "java",  "-Dproject.root="+project.rootDir.toString(),"-classpath", sourceSets.main.runtimeClasspath.asPath, "com.codingdie.analyzer.MasterStarter" , project.rootDir.toString() ,"127.0.0.1",2550
}


task startSlave(type: Exec,dependsOn:"build") {
    commandLine "java",  "-Dproject.root="+project.rootDir.toString(),"-classpath", sourceSets.main.runtimeClasspath.asPath, "com.codingdie.analyzer.SlaveStarter" , project.rootDir.toString() ,"127.0.0.1",2552
}